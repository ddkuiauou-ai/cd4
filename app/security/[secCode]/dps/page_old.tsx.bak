import { notFound } from "next/navigation";
import { ChevronRightIcon } from "@radix-ui/react-icons";
import Link from "next/link";
import { Balancer } from "react-wrap-balancer";
import { Coins, Scale, TrendingUp, BarChart3, FileText, Target, DollarSign } from "lucide-react";
import { cn } from "@/lib/utils";
import { getSecurityBySecCode } from "@/lib/getSecCode";
import { getSecuritiesByComId, getAllinOneBySecId } from "@/lib/getSecurities";
import { getCompanyAggregatedMarketcap } from "@/lib/data/company";
import { getDpsRank } from "@/lib/data/security";
import { getSecuritySearchNames } from "@/lib/getSearch";
import ChartDPSEnhanced from "@/components/chart-DPS-enhanced";
import ListDPSEnhanced from "@/components/list-DPS-enhanced";
import CardMarketcap from "@/components/card-marketcap";
import RankHeader from "@/components/header-rank";
import { MarketcapPager } from "@/components/pager-marketcap";
import { CompanyFinancialTabs } from "@/components/company-financial-tabs";
import { InteractiveSecuritiesSection } from "@/components/simple-interactive-securities";
import CompanyLogo from "@/components/CompanyLogo";
import { LayoutWrapper } from "@/components/layout-wrapper";
import { Security } from "@/typings";

/**
 * Props for Security DPS Page
 */
interface SecurityDPSPageProps {
  params: Promise<{ secCode: string }>;
}

/**
 * Generate metadata for the security DPS page
 */
export async function generateMetadata({ params }: SecurityDPSPageProps) {
  const { secCode } = await params;
  const security = await getSecurityBySecCode(secCode);

  if (!security) {
    return {
      title: "종목을 찾을 수 없습니다 - CD3",
      description: "요청하신 종목을 찾을 수 없습니다.",
    };
  }

  return {
    title: `${security.korName || security.name} 주당배당금 DPS - CD3`,
    description: `${security.korName || security.name}의 연도별 주당배당금(DPS) 변동 차트와 상세 분석 정보를 확인하세요.`,
  };
}

/**
 * Security DPS Page
 * Displays DPS data and charts for a specific security
 */
export default async function SecurityDPSPage({ params }: SecurityDPSPageProps) {
  const { secCode } = await params;

  const security = await getSecurityBySecCode(secCode);

  if (!security) {
    notFound();
  }

  // Extract ticker from secCode (e.g., "KOSPI.005930" -> "005930")
  const currentTicker = secCode.includes('.') ? secCode.split('.')[1] : secCode;

  // Get related securities for company navigation
  const securities = security.companyId ? await getSecuritiesByComId(security.companyId) : [];
  const commonSecurities = securities.filter((sec) => sec.type === "보통주");

  // 종목 비교용 필터링: 보통주와 우선주만 표시
  const comparableSecurities = securities.filter((sec) =>
    sec.type === "보통주" || sec.type === "우선주"
  );

  // 🔥 종목별 DPS 데이터 추가 - 종목 비교를 위해 현재 DPS 값을 포함
  const comparableSecuritiesWithDPS = await Promise.all(
    comparableSecurities.map(async (sec) => {
      try {
        // 각 종목의 최신 DPS 데이터 가져오기
        const securityWithDPS = await getSecurityBySecCode(`${sec.exchange}.${sec.ticker}`);
        return {
          ...sec,
          dps: securityWithDPS?.dps || null,
          dpsDate: securityWithDPS?.dpsDate || null,
        };
      } catch (error) {
        console.error(`Failed to get DPS data for ${sec.ticker}:`, error);
        return {
          ...sec,
          dps: null,
          dpsDate: null,
        };
      }
    })
  );

  // Get DPS data
  const data = await getAllinOneBySecId(security.securityId);

  // 🔥 CD3 방어적 프로그래밍: 데이터가 없는 경우 404 처리
  if (!data || data.length === 0) {
    notFound();
  }

  // Get DPS rank
  const dpsRank = await getDPSRank(security.securityId);

  // Get company marketcap data for Interactive Securities Section
  let companyMarketcapData = null;
  if (security.companyId) {
    try {
      companyMarketcapData = await getCompanyAggregatedMarketcap(security.companyId);
    } catch (error) {
      // Error is silently handled - fallback to null
    }
  }

  const result = data.map((item) => ({
    date: item.date instanceof Date ? item.date.toISOString().split('T')[0] : String(item.date),
    value: item.dps,
  })).filter((item): item is { date: string; value: number } => item.value !== null);

  // Calculate range for chart
  const dpsValues = result.map(item => item.value).filter(val => val != null);
  const rangeMin = Math.min(...dpsValues);
  const rangeMax = Math.max(...dpsValues);

  // 🔥 기간별 DPS 통계 계산
  const now = new Date();
  const getDateYearsAgo = (years: number) => {
    const date = new Date(now);
    date.setFullYear(date.getFullYear() - years);
    return date;
  };

  const getAverageDPSForPeriod = (years: number) => {
    const cutoffDate = getDateYearsAgo(years);
    const periodData = result.filter(item => {
      const itemDate = typeof item.date === 'string' ? new Date(item.date) : item.date;
      return itemDate >= cutoffDate && item.value != null;
    });

    if (periodData.length === 0) return null;
    const sum = periodData.reduce((acc, item) => acc + (item.value || 0), 0);
    return sum / periodData.length;
  };

  // 기간별 평균 DPS 계산
  const dps20Year = getAverageDPSForPeriod(20);
  const dps10Year = getAverageDPSForPeriod(10);
  const dps5Year = getAverageDPSForPeriod(5);
  const dps3Year = getAverageDPSForPeriod(3);
  const dps12Month = getAverageDPSForPeriod(1);

  // 최근 DPS (가장 최신 데이터)
  const latestDPS = result.length > 0 && result[result.length - 1]?.value
    ? result[result.length - 1].value
    : null;

  // Get search data for header
  const searchData = await getSecuritySearchNames();

  return (
    <LayoutWrapper searchData={searchData}>
      <main>
        <div className="relative py-6 lg:gap-10 lg:py-8 xl:grid xl:grid-cols-[1fr_320px]">
          <div className="mx-auto w-full min-w-0 space-y-16">
            {/* 브레드크럼 네비게이션 */}
            <div className="space-y-0">
              <div className="flex items-center space-x-1 text-sm text-muted-foreground">
                <Link href="/" className="hover:text-foreground transition-colors">
                  홈
                </Link>
                <ChevronRightIcon className="h-4 w-4" />
                <Link href="/company" className="hover:text-foreground transition-colors">
                  기업
                </Link>
                <ChevronRightIcon className="h-4 w-4" />
                <Link href={`/company/${secCode}`} className="hover:text-foreground transition-colors">
                  {security.company?.korName || security.company?.name || security.korName || security.name}
                </Link>
                <ChevronRightIcon className="h-4 w-4" />
                <div className="font-medium text-muted-foreground">{security.type}</div>
                <ChevronRightIcon className="h-4 w-4" />
                <span className="font-medium text-foreground">
                  주당배당금 <span className="text-purple-600 font-bold">DPS</span>
                </span>
              </div>
            </div>

            {/* 페이지 제목 섹션 */}
            <div className="space-y-6">
              <div className="space-y-2">
                <div className="flex items-center gap-4 mb-4">
                  <CompanyLogo
                    companyName={security.company?.korName || security.korName || security.name}
                    logoUrl={security.company?.logo}
                    size={64}
                    className="flex-shrink-0"
                  />
                  <div className="flex-1 min-w-0">
                    <h1 className="font-heading text-3xl md:text-4xl lg:text-5xl font-bold tracking-tight">
                      <Balancer>
                        {security.company?.korName || security.korName || security.name} {security.type} DPS
                      </Balancer>
                    </h1>
                  </div>
                </div>
                <p className="text-lg md:text-xl text-muted-foreground mt-2">
                  {security.korName || security.name}의 주당배당금 Dividend Per Share 분석
                </p>
              </div>

              {/* DPS 설명 알림 */}
              <div data-slot="alert" role="alert" className="relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current bg-card text-card-foreground">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-info h-4 w-4" aria-hidden="true">
                  <circle cx="12" cy="12" r="10"></circle>
                  <path d="M12 16v-4"></path>
                  <path d="M12 8h.01"></path>
                </svg>
                <div data-slot="alert-description" className="text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed">
                  주당배당금(DPS)은 1주당 지급되는 배당금 액수로, 기업의 배당 정책과 주주환원 의지를 나타내는 핵심 지표입니다.
                  지속적인 DPS 증가는 안정적인 배당성장주의 특징입니다.
                </div>
              </div>
            </div>

            {/* DPS 개요 섹션 */}
            <div id="dps-overview" className="relative border-t border-purple-100 dark:border-purple-800/50 pt-8 pb-8 bg-purple-50/30 dark:bg-purple-900/20 rounded-xl -mx-4 px-4">
              <div className="flex items-center gap-3 mb-6">
                <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-purple-100 dark:bg-purple-800/50">
                  <Coins className="h-5 w-5 text-purple-600 dark:text-purple-400" />
                </div>
                <div>
                  <h2 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 tracking-tight">DPS 개요</h2>
                  <p className="text-base text-gray-600 dark:text-gray-400 mt-1">주당배당금 순위와 기본 정보</p>
                </div>
              </div>

              <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
                {/* DPS 순위 카드 */}
                <div className="bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800/50 dark:to-slate-900/50 border border-slate-200 dark:border-slate-700 hover:shadow-md transition-shadow rounded-lg p-4">
                  <div className="flex items-center space-x-3">
                    <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-slate-700 dark:bg-slate-600 text-white">
                      <Coins className="h-5 w-5" />
                    </div>
                    <div>
                      <p className="text-xl font-bold text-slate-900 dark:text-slate-100">{dpsRank ? `${dpsRank}위` : "—"}</p>
                      <p className="text-sm text-slate-600 dark:text-slate-400">DPS 랭킹</p>
                    </div>
                  </div>
                </div>

                {/* 최근 DPS 카드 */}
                <div className="bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-800/50 dark:to-purple-900/50 border border-purple-200 dark:border-purple-700 hover:shadow-md transition-shadow rounded-lg p-4">
                  <div className="flex items-center space-x-3">
                    <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-purple-600 dark:bg-purple-700 text-white">
                      <DollarSign className="h-5 w-5" />
                    </div>
                    <div>
                      <p className="text-xl font-bold text-purple-900 dark:text-purple-100">
                        {latestDPS ? `${latestDPS.toLocaleString()}원` : "—"}
                      </p>
                      <p className="text-sm text-purple-600 dark:text-purple-400">최근 DPS</p>
                    </div>
                  </div>
                </div>

                {/* 3년 평균 DPS 카드 */}
                <div className="bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-800/50 dark:to-blue-900/50 border border-blue-200 dark:border-blue-700 hover:shadow-md transition-shadow rounded-lg p-4">
                  <div className="flex items-center space-x-3">
                    <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-blue-600 dark:bg-blue-700 text-white">
                      <Target className="h-5 w-5" />
                    </div>
                    <div>
                      <p className="text-xl font-bold text-blue-900 dark:text-blue-100">
                        {dps3Year ? `${Math.round(dps3Year).toLocaleString()}원` : "—"}
                      </p>
                      <p className="text-sm text-blue-600 dark:text-blue-400">3년 평균</p>
                    </div>
                  </div>
                </div>

                {/* 데이터 기간 카드 */}
                <div className="bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800/50 dark:to-gray-900/50 border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow rounded-lg p-4">
                  <div className="flex items-center space-x-3">
                    <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-gray-600 dark:bg-gray-700 text-white">
                      <BarChart3 className="h-5 w-5" />
                    </div>
                    <div>
                      <p className="text-xl font-bold text-gray-900 dark:text-gray-100">{result.length}년</p>
                      <p className="text-sm text-gray-600 dark:text-gray-400">데이터 기간</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* 종목 비교 섹션 */}
            {comparableSecuritiesWithDPS.length > 1 && (
              <div id="securities-comparison" className="relative border-t border-slate-100 dark:border-slate-800/50 pt-8 pb-8 bg-slate-50/30 dark:bg-slate-900/20 rounded-xl -mx-4 px-4">
                <div className="flex items-center gap-3 mb-6">
                  <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-slate-100 dark:bg-slate-800/50">
                    <Scale className="h-5 w-5 text-slate-600 dark:text-slate-400" />
                  </div>
                  <div>
                    <h2 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 tracking-tight">종목 비교</h2>
                    <p className="text-base text-gray-600 dark:text-gray-400 mt-1">동일 기업의 보통주/우선주 DPS 비교</p>
                  </div>
                </div>

                <InteractiveSecuritiesSection
                  companyMarketcapData={companyMarketcapData}
                  companySecs={comparableSecuritiesWithDPS}
                  currentTicker={currentTicker}
                  market={security.exchange || "KOSPI"}
                  baseUrl="security"
                  currentMetric="dps"
                  showSummaryCard={false}
                />
              </div>
            )}

            {/* 연도별 DPS 데이터 섹션 */}
            <div id="dps-chart" className="relative border-t border-purple-100 dark:border-purple-800/50 pt-8 pb-8 bg-purple-50/30 dark:bg-purple-900/20 rounded-xl -mx-4 px-4">
              <div className="flex items-center gap-3 mb-6">
                <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-purple-100 dark:bg-purple-800/50">
                  <TrendingUp className="h-5 w-5 text-purple-600 dark:text-purple-400" />
                </div>
                <div>
                  <h2 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 tracking-tight">연도별 DPS 데이터</h2>
                  <p className="text-base text-gray-600 dark:text-gray-400 mt-1">주당배당금 변화 추이와 상세 분석</p>
                </div>
              </div>
              
              <div className="space-y-8">
                {/* 차트 */}
                <div className="bg-white dark:bg-slate-800 rounded-lg border border-slate-200 dark:border-slate-700 p-6">
                  <ChartDPSEnhanced
                    data={result.map(item => ({
                      date: item.date,
                      totalValue: item.value
                    }))}
                    format="number"
                    formatTooltip="number"
                  />
                </div>

                {/* 테이블 */}
                <div className="bg-white dark:bg-slate-800 rounded-lg border border-slate-200 dark:border-slate-700 p-6">
                  <ListDPSEnhanced data={result.map((item, index) => ({
                    date: item.date,
                    value: item.value,
                    changeRate: index > 0 ? 
                      ((item.value - result[index - 1].value) / result[index - 1].value) * 100 
                      : undefined
                  }))} />
                </div>
              </div>
            </div>

            {/* 기업 탭 네비게이션 */}
            <div id="company-navigation" className="relative border-t border-slate-100 dark:border-slate-800/50 pt-8 pb-8 bg-slate-50/30 dark:bg-slate-900/20 rounded-xl -mx-4 px-4">
              <div className="flex items-center gap-3 mb-6">
                <div className="flex items-center justify-center w-10 h-10 rounded-lg bg-slate-100 dark:bg-slate-800/50">
                  <FileText className="h-5 w-5 text-slate-600 dark:text-slate-400" />
                </div>
                <div>
                  <h2 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 tracking-tight">기업 정보</h2>
                  <p className="text-base text-gray-600 dark:text-gray-400 mt-1">다른 재무 지표 및 기업 상세 정보</p>
                </div>
              </div>

              <CompanyFinancialTabs
                secCode={secCode}
              />
            </div>

            {/* 페이징 */}
            <div className="border-t border-slate-200 dark:border-slate-800 pt-8">
              <MarketcapPager 
                rank={dpsRank || 1}
              />
            </div>
          </div>

          {/* 🔥 사이드바 */}
          <div className="hidden xl:sticky xl:top-[100px] xl:block xl:h-[calc(100vh-120px)] xl:overflow-y-auto">
            <div className="space-y-6">
              {/* 핵심 지표 카드 */}
              <CardMarketcap 
                security={security as unknown as Security}
                currentMetric="dps"
              />

              {/* 종목 비교 버튼들 - 세로 배치 */}
              {comparableSecuritiesWithDPS.length > 1 && (
                <div className="space-y-4">
                  <div className="text-sm font-medium text-slate-900 dark:text-slate-100">
                    종목 비교
                  </div>
                  <div className="flex flex-col space-y-2">
                    {comparableSecuritiesWithDPS.map((sec) => {
                      const isActive = `${sec.exchange}.${sec.ticker}` === secCode;
                      const secPath = `/security/${sec.exchange}.${sec.ticker}/dps`;
                      
                      return (
                        <Link 
                          key={sec.securityId} 
                          href={secPath}
                          className={cn(
                            "flex items-center justify-between px-4 py-3 rounded-lg border transition-colors",
                            isActive 
                              ? "bg-purple-50 dark:bg-purple-900/20 border-purple-200 dark:border-purple-800" 
                              : "bg-white dark:bg-slate-800 border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-700/50"
                          )}
                        >
                          <div className="flex-1">
                            <div className={cn(
                              "font-medium text-sm",
                              isActive 
                                ? "text-purple-900 dark:text-purple-100" 
                                : "text-slate-900 dark:text-slate-100"
                            )}>
                              {sec.type}
                            </div>
                            <div className="text-xs text-slate-500 dark:text-slate-400">
                              {sec.ticker}
                            </div>
                          </div>
                          <div className="text-right">
                            <div className={cn(
                              "text-sm font-bold",
                              isActive 
                                ? "text-purple-700 dark:text-purple-300" 
                                : "text-slate-700 dark:text-slate-300"
                            )}>
                              {sec.dps ? `${sec.dps.toLocaleString()}원` : "—"}
                            </div>
                            <div className="text-xs text-slate-400">
                              DPS
                            </div>
                          </div>
                        </Link>
                      );
                    })}
                  </div>
                </div>
              )}

              {/* 네비게이션 링크 */}
              <div className="space-y-4">
                <div className="text-sm font-medium text-slate-900 dark:text-slate-100">
                  빠른 이동
                </div>
                <div className="flex flex-col space-y-2">
                  <a 
                    href="#dps-overview" 
                    className="px-4 py-2 text-sm text-slate-600 dark:text-slate-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors"
                  >
                    DPS 개요
                  </a>
                  {comparableSecuritiesWithDPS.length > 1 && (
                    <a 
                      href="#securities-comparison" 
                      className="px-4 py-2 text-sm text-slate-600 dark:text-slate-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors"
                    >
                      종목 비교
                    </a>
                  )}
                  <a 
                    href="#dps-chart" 
                    className="px-4 py-2 text-sm text-slate-600 dark:text-slate-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors"
                  >
                    연도별 데이터
                  </a>
                  <a 
                    href="#company-navigation" 
                    className="px-4 py-2 text-sm text-slate-600 dark:text-slate-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors"
                  >
                    기업 정보
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </LayoutWrapper>
  );
}
